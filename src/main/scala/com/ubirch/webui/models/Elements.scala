package com.ubirch.webui.models

object Elements {
  val NOT_AUTHORIZED_CODE = 401
  val OK_CODE = 200
  val ERROR_REQUEST_CODE = 400
  val PREFIX_OWN_DEVICES = "OWN_DEVICES_"
  val OWN_DEVICES_GROUP_USERNAME_PLACE = 1
  val PREFIX_API = "_API_CONFIG_"
  val PREFIX_DEVICE_TYPE = "DEVICE_TYPE_"
  val DEVICE_TYPE_TYPE_PLACE = 1
  val DEVICE = "DEVICE"
  val ADMIN = "ADMIN"
  val USER = "USER"
  val DEFAULT_FIRST_NAME = " "
  val ATTRIBUTES_DEVICE_GROUP_NAME = "attributesDeviceGroup"
  val ATTRIBUTES_API_GROUP_NAME = "attributesApiGroup"
  val UNCLAIMED_DEVICES_GROUP_NAME = "UNCLAIMED_DEVICES"
  val PROVIDER_GROUP_PREFIX = "PROVIDER_DEVICES_"
  val FIRST_CLAIMED_TIMESTAMP = "FIRST_CLAIMED_TIMESTAMP"
  val FIRST_CLAIMED_GROUP_NAME_PREFIX = "FIRST_CLAIMED_"
  val CLAIMING_TAGS_NAME = "claiming_tags"
  val CLAIMED = "CLAIMED_"
  val DEFAULT_PASSWORD_GROUP_PREFIX = "DEFAULT_PASSWORD_"
  val DEFAULT_PASSWORD_GROUP_ATTRIBUTE = "DEFAULT_PASSWORD"
  val DEFAULT_PASSWORD_USER_ATTRIBUTE = "DEFAULT_DEVICE_PASSWORD"

  // account plans

}

object AccountPlans {
  val ACCOUNT_PLAN = "account_plan"

  val ACCOUNT_TYPE = "account_type"
  val PERSONALITY_CHECK_REQUIRED = "personality_check_required"
  val PERSONALITY_CHECKED = "personality_checked"
  val PERSONALITY_CHECK_FAILED = "personality_check_failed"
  val PROFILE_SETTINGS_REQUIRED = "profile_settings_required"
  val PROFILE_SETTINGS_SUFFICIENT = "profile_settings_sufficient"

  val FREE = "free"
  val PRO = "pro"
  val VERIFIER = "verifier"
  val ANCHORER = "anchorer"
  val TRUE = "true"
  val FALSE = "false"

  val ERROR = "error"

  val DEFAULT_FREE_FULLY_CREATED_ATTRIBUTES: Map[String, List[String]] = Map(
    ACCOUNT_PLAN -> List(FREE),
    ACCOUNT_TYPE -> List(FREE),
    PERSONALITY_CHECK_REQUIRED -> List(FALSE),
    PERSONALITY_CHECKED -> List(FALSE),
    PERSONALITY_CHECK_FAILED -> List(FALSE),
    PROFILE_SETTINGS_REQUIRED -> List(FALSE),
    PROFILE_SETTINGS_SUFFICIENT -> List(FALSE)
  )

  val DEFAULT_VERIFIER_FULLY_CREATED_ATTRIBUTES: Map[String, List[String]] = Map(
    ACCOUNT_PLAN -> List(PRO),
    ACCOUNT_TYPE -> List(VERIFIER),
    PERSONALITY_CHECK_REQUIRED -> List(TRUE),
    PERSONALITY_CHECKED -> List(FALSE),
    PERSONALITY_CHECK_FAILED -> List(FALSE),
    PROFILE_SETTINGS_REQUIRED -> List(TRUE),
    PROFILE_SETTINGS_SUFFICIENT -> List(FALSE)
  )

  val DEFAULT_ANCHORER_FULLY_CREATED_ATTRIBUTES: Map[String, List[String]] = Map(
    ACCOUNT_PLAN -> List(PRO),
    ACCOUNT_TYPE -> List(ANCHORER),
    PERSONALITY_CHECK_REQUIRED -> List(TRUE),
    PERSONALITY_CHECKED -> List(FALSE),
    PERSONALITY_CHECK_FAILED -> List(FALSE),
    PROFILE_SETTINGS_REQUIRED -> List(TRUE),
    PROFILE_SETTINGS_SUFFICIENT -> List(FALSE)
  )
}
