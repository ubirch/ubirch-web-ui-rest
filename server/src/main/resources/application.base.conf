core {
  timeToWaitDevices = 20
}

keycloak {
  server {
    url = "http://localhost:8080/auth"
    realm = "master"
    username = admin
    password = admin
    clientId = "admin-cli"
  }
  realmName = "test-realm"
  jsonString = """{ "realm": "test-realm", "auth-server-url": "http://localhost:8080/auth", "ssl-required": "external", "resource": "ubirch-2.0-user-access", "credentials": { "secret": "edf3423d-2392-441f-aa81-323de6aadd84" }, "confidential-port": 0 }"""
}

server {
  port = 8081
  baseUrl = "/ubirch-web-ui/api"
  scalatra {
    environment = "deployment"//"development"
  }
  swaggerPath = "server/src/main/swagger-ui"
}

janus {

  connector {

    hosts = 127.0.0.1
    port = 8282

    connectionPool {
      reconnectInterval = 500
      maxWaitForConnection = 6000
    }
    serializer {
      className = org.apache.tinkerpop.gremlin.driver.ser.GryoMessageSerializerV3d0
      config {
        ioRegistries = [org.janusgraph.graphdb.tinkerpop.JanusGraphIoRegistry]
      }
    }
  }
}

app {
  version = "v1"
}

batch {

  separator = ";"

  inject {

    kafkaConsumer {
      //Comma-separeted values of IP/Hostname and ports
      bootstrapServers = "localhost:9092"
      topic = "batch.incoming"
      //If empty, a group id will be created.
      groupId = "web_ui_rest-group"
      gracefulTimeout = 2 //In Seconds
      maxPollRecords = 500
      metricsSubNamespace = "web_ui_rest"
      fetchMaxBytesConfig = 52428800
      maxPartitionFetchBytesConfig = 1048576
      reconnectBackoffMsConfig = 50
      reconnectBackoffMaxMsConfig = 1000
    }

    kafkaProducer {
      lingerMS = 600
      //Comma-separeted values of IP/Hostname and ports
      bootstrapServers = "localhost:9092"
      topic = "batch.incoming"
      errorTopic = "batch.error"

    }

  }

  identity {
    kafkaProducer {
      lingerMS = 600
      //Comma-separeted values of IP/Hostname and ports
      bootstrapServers = "localhost:9092"
      topic = "com.ubirch.identity"
      errorTopic = "batch.error"

    }
  }

  executionContext {
    threadPoolSize = 20
  }

}
